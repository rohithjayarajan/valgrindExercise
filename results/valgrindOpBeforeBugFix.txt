rohith@Skynet ~/valgrindExercise/build $ valgrind ./app/shell-app==6041== Memcheck, a memory error detector
==6041== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==6041== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==6041== Command: ./app/shell-app
==6041== 
Averaged sensor reading: 10
==6041== Conditional jump or move depends on uninitialised value(s)
==6041==    at 0x401DC7: main (main.cpp:9)
==6041== 
==6041== 
==6041== HEAP SUMMARY:
==6041==     in use at exit: 72,748 bytes in 3 blocks
==6041==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==6041== 
==6041== LEAK SUMMARY:
==6041==    definitely lost: 24 bytes in 1 blocks
==6041==    indirectly lost: 20 bytes in 1 blocks
==6041==      possibly lost: 0 bytes in 0 blocks
==6041==    still reachable: 72,704 bytes in 1 blocks
==6041==         suppressed: 0 bytes in 0 blocks
==6041== Rerun with --leak-check=full to see details of leaked memory
==6041== 
==6041== For counts of detected and suppressed errors, rerun with: -v
==6041== Use --track-origins=yes to see where uninitialised values come from
==6041== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

rohith@Skynet ~/valgrindExercise/build $ valgrind --tool=helgrind ./app/shell-app==6042== Helgrind, a thread error detector
==6042== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==6042== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==6042== Command: ./app/shell-app
==6042== 
Averaged sensor reading: 10
==6042== 
==6042== For counts of detected and suppressed errors, rerun with: -v
==6042== Use --history-level=approx or =none to gain increased speed, at
==6042== the cost of reduced accuracy of conflicting-access information
==6042== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

rohith@Skynet ~/valgrindExercise/build $ valgrind --leak-check=full ./app/shell-app==6043== Memcheck, a memory error detector
==6043== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==6043== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==6043== Command: ./app/shell-app
==6043== 
Averaged sensor reading: 10
==6043== Conditional jump or move depends on uninitialised value(s)
==6043==    at 0x401DC7: main (main.cpp:9)
==6043== 
==6043== 
==6043== HEAP SUMMARY:
==6043==     in use at exit: 72,748 bytes in 3 blocks
==6043==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==6043== 
==6043== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==6043==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6043==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==6043==    by 0x401D9A: main (main.cpp:7)
==6043== 
==6043== LEAK SUMMARY:
==6043==    definitely lost: 24 bytes in 1 blocks
==6043==    indirectly lost: 20 bytes in 1 blocks
==6043==      possibly lost: 0 bytes in 0 blocks
==6043==    still reachable: 72,704 bytes in 1 blocks
==6043==         suppressed: 0 bytes in 0 blocks
==6043== Reachable blocks (those to which a pointer was found) are not shown.
==6043== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==6043== 
==6043== For counts of detected and suppressed errors, rerun with: -v
==6043== Use --track-origins=yes to see where uninitialised values come from
==6043== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

rohith@Skynet ~/valgrindExercise/build $ valgrind --leak-check=full --show-leak-kinds=all ./app/shell-app
==6044== Memcheck, a memory error detector
==6044== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==6044== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==6044== Command: ./app/shell-app
==6044== 
Averaged sensor reading: 10
==6044== Conditional jump or move depends on uninitialised value(s)
==6044==    at 0x401DC7: main (main.cpp:9)
==6044== 
==6044== 
==6044== HEAP SUMMARY:
==6044==     in use at exit: 72,748 bytes in 3 blocks
==6044==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==6044== 
==6044== 20 bytes in 1 blocks are indirectly lost in loss record 1 of 3
==6044==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6044==    by 0x40265B: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==6044==    by 0x4025C8: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==6044==    by 0x402529: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==6044==    by 0x40241E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:185)
==6044==    by 0x40226A: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:136)
==6044==    by 0x4020A1: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:291)
==6044==    by 0x401F06: AnalogSensor::Read() (AnalogSensor.cpp:16)
==6044==    by 0x401D9A: main (main.cpp:7)
==6044== 
==6044== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==6044==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6044==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==6044==    by 0x401D9A: main (main.cpp:7)
==6044== 
==6044== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==6044==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6044==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==6044==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==6044==    by 0x40107CA: call_init (dl-init.c:30)
==6044==    by 0x40107CA: _dl_init (dl-init.c:120)
==6044==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==6044== 
==6044== LEAK SUMMARY:
==6044==    definitely lost: 24 bytes in 1 blocks
==6044==    indirectly lost: 20 bytes in 1 blocks
==6044==      possibly lost: 0 bytes in 0 blocks
==6044==    still reachable: 72,704 bytes in 1 blocks
==6044==         suppressed: 0 bytes in 0 blocks
==6044== 
==6044== For counts of detected and suppressed errors, rerun with: -v
==6044== Use --track-origins=yes to see where uninitialised values come from
==6044== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

rohith@Skynet ~/valgrindExercise/build $ valgrind --tool=callgrind ./app/shell-app==6059== Callgrind, a call-graph generating cache profiler
==6059== Copyright (C) 2002-2015, and GNU GPL'd, by Josef Weidendorfer et al.
==6059== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==6059== Command: ./app/shell-app
==6059== 
==6059== For interactive control, run 'callgrind_control -h'.
Averaged sensor reading: 10
==6059== 
==6059== Events    : Ir
==6059== Collected : 2193795
==6059== 
==6059== I   refs:      2,193,795

